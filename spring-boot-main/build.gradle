plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.10'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'com.google.cloud.tools.jib' version '3.4.0'
}

group = 'com.epam.training'
version = '0.0.1-SNAPSHOT'

jib {
    from {
        image = 'eclipse-temurin:17-jre' // Or 21 if you're on Java 21
    }
    to {
        image = 'ibragimovanvar/training-service:1.1' // Or local repo
    }
    container {
        jvmFlags = ['-Dspring.profiles.active=docker']
        ports = ['8082']
        mainClass = project.hasProperty('mainClassName') ? project.property('mainClassName') : 'com.epam.training.spring_boot_epam.SpringBootEpamApplication'
    }
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    mapstructVersion = '1.5.5.Final'
    openapiVersion = '2.5.0'
    resilience4jVersion = '2.2.0'
    set('springCloudVersion', "2023.0.5")
}

dependencies {
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j'

    implementation 'org.springframework.boot:spring-boot-starter-activemq'

    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    implementation 'io.github.resilience4j:resilience4j-core:2.2.0'
    implementation 'io.github.resilience4j:resilience4j-spring-boot3:2.2.0'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'

    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.12.3'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.12.3'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.12.3'

    testImplementation "org.wiremock:wiremock:3.13.0"
    testImplementation "org.assertj:assertj-core:3.24.2"
    testImplementation "org.apache.httpcomponents.client5:httpclient5:5.3"

    implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: openapiVersion

    implementation group: 'org.mapstruct', name: 'mapstruct', version: mapstructVersion
    annotationProcessor group: 'org.mapstruct', name: 'mapstruct-processor', version: mapstructVersion

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
    runtimeOnly 'org.postgresql:postgresql'

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}
tasks.named('test') {
    useJUnitPlatform()
}